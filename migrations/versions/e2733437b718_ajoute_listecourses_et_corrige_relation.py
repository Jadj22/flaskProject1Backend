"""Ajoute ListeCourses et corrige relation

Revision ID: e2733437b718
Revises: 
Create Date: 2025-03-11 08:50:15.730951

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e2733437b718'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ingredients',
    sa.Column('id_ingredient', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('unite_par_defaut', sa.String(length=20), nullable=True),
    sa.Column('prix_unitaire', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id_ingredient'),
    sa.UniqueConstraint('nom')
    )
    op.create_table('utilisateurs',
    sa.Column('id_utilisateur', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('mot_de_passe', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id_utilisateur'),
    sa.UniqueConstraint('email')
    )
    op.create_table('inventaires',
    sa.Column('id_inventaire', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('publique', sa.Boolean(), nullable=True),
    sa.Column('id_utilisateur', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_utilisateur'], ['utilisateurs.id_utilisateur'], ),
    sa.PrimaryKeyConstraint('id_inventaire')
    )
    op.create_table('recettes',
    sa.Column('id_recette', sa.Integer(), nullable=False),
    sa.Column('titre', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('id_utilisateur', sa.Integer(), nullable=False),
    sa.Column('publique', sa.Boolean(), nullable=True),
    sa.Column('temps_preparation', sa.Integer(), nullable=True),
    sa.Column('temps_cuisson', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_utilisateur'], ['utilisateurs.id_utilisateur'], ),
    sa.PrimaryKeyConstraint('id_recette')
    )
    op.create_table('inventaire_ingredients',
    sa.Column('id_inventaire_ingredient', sa.Integer(), nullable=False),
    sa.Column('id_inventaire', sa.Integer(), nullable=False),
    sa.Column('id_ingredient', sa.Integer(), nullable=False),
    sa.Column('quantite_disponible', sa.Float(), nullable=False),
    sa.Column('unite', sa.String(length=20), nullable=False),
    sa.Column('prix_unitaire', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id_ingredient'], ['ingredients.id_ingredient'], ),
    sa.ForeignKeyConstraint(['id_inventaire'], ['inventaires.id_inventaire'], ),
    sa.PrimaryKeyConstraint('id_inventaire_ingredient')
    )
    op.create_table('liste_courses',
    sa.Column('id_liste', sa.Integer(), nullable=False),
    sa.Column('nom', sa.String(length=100), nullable=False),
    sa.Column('date_creation', sa.DateTime(), nullable=True),
    sa.Column('id_utilisateur', sa.Integer(), nullable=False),
    sa.Column('id_recette', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_recette'], ['recettes.id_recette'], ),
    sa.ForeignKeyConstraint(['id_utilisateur'], ['utilisateurs.id_utilisateur'], ),
    sa.PrimaryKeyConstraint('id_liste')
    )
    op.create_table('recette_ingredients',
    sa.Column('id_recette_ingredient', sa.Integer(), nullable=False),
    sa.Column('id_recette', sa.Integer(), nullable=False),
    sa.Column('id_ingredient', sa.Integer(), nullable=False),
    sa.Column('quantite', sa.Float(), nullable=False),
    sa.Column('unite', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['id_ingredient'], ['ingredients.id_ingredient'], ),
    sa.ForeignKeyConstraint(['id_recette'], ['recettes.id_recette'], ),
    sa.PrimaryKeyConstraint('id_recette_ingredient')
    )
    op.create_table('recette_utilisateur',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_recette', sa.Integer(), nullable=False),
    sa.Column('id_utilisateur', sa.Integer(), nullable=False),
    sa.Column('date_enregistrement', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_recette'], ['recettes.id_recette'], ),
    sa.ForeignKeyConstraint(['id_utilisateur'], ['utilisateurs.id_utilisateur'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liste_courses_items',
    sa.Column('id_item', sa.Integer(), nullable=False),
    sa.Column('id_liste', sa.Integer(), nullable=False),
    sa.Column('id_ingredient', sa.Integer(), nullable=False),
    sa.Column('quantite', sa.Float(), nullable=False),
    sa.Column('unite', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['id_ingredient'], ['ingredients.id_ingredient'], ),
    sa.ForeignKeyConstraint(['id_liste'], ['liste_courses.id_liste'], ),
    sa.PrimaryKeyConstraint('id_item')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('liste_courses_items')
    op.drop_table('recette_utilisateur')
    op.drop_table('recette_ingredients')
    op.drop_table('liste_courses')
    op.drop_table('inventaire_ingredients')
    op.drop_table('recettes')
    op.drop_table('inventaires')
    op.drop_table('utilisateurs')
    op.drop_table('ingredients')
    # ### end Alembic commands ###
